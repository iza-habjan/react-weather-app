{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = parse;\nvar reName = /^[^\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi; // Modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\n\nvar reAttr = /^\\s*((?:\\\\.|[\\w\\u00b0-\\uFFFF-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])((?:[^\\\\]|\\\\[^])*?)\\3|(#?(?:\\\\.|[\\w\\u00b0-\\uFFFF-])*)|)|)\\s*(i)?\\]/;\nvar actionTypes = {\n  undefined: \"exists\",\n  \"\": \"equals\",\n  \"~\": \"element\",\n  \"^\": \"start\",\n  $: \"end\",\n  \"*\": \"any\",\n  \"!\": \"not\",\n  \"|\": \"hyphen\"\n};\nvar Traversals = {\n  \">\": \"child\",\n  \"<\": \"parent\",\n  \"~\": \"sibling\",\n  \"+\": \"adjacent\"\n};\nvar attribSelectors = {\n  \"#\": [\"id\", \"equals\"],\n  \".\": [\"class\", \"element\"]\n}; // Pseudos, whose data property is parsed as well.\n\nvar unpackPseudos = new Set([\"has\", \"not\", \"matches\", \"is\", \"host\", \"host-context\"]);\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\nvar quotes = new Set(['\"', \"'\"]); // Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\n\nfunction funescape(_, escaped, escapedWhitespace) {\n  var high = parseInt(escaped, 16) - 0x10000; // NaN means non-codepoint\n\n  return high !== high || escapedWhitespace ? escaped : high < 0 ? // BMP codepoint\n  String.fromCharCode(high + 0x10000) : // Supplemental Plane codepoint (surrogate pair)\n  String.fromCharCode(high >> 10 | 0xd800, high & 0x3ff | 0xdc00);\n}\n\nfunction unescapeCSS(str) {\n  return str.replace(reEscape, funescape);\n}\n\nfunction isWhitespace(c) {\n  return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\n\nfunction parse(selector, options) {\n  var subselects = [];\n  selector = parseSelector(subselects, \"\" + selector, options);\n\n  if (selector !== \"\") {\n    throw new Error(\"Unmatched selector: \" + selector);\n  }\n\n  return subselects;\n}\n\nfunction parseSelector(subselects, selector, options) {\n  var _a, _b;\n\n  if (options === void 0) {\n    options = {};\n  }\n\n  var tokens = [];\n  var sawWS = false;\n\n  function getName() {\n    var match = selector.match(reName);\n\n    if (!match) {\n      throw new Error(\"Expected name, found \" + selector);\n    }\n\n    var sub = match[0];\n    selector = selector.substr(sub.length);\n    return unescapeCSS(sub);\n  }\n\n  function stripWhitespace(start) {\n    while (isWhitespace(selector.charAt(start))) start++;\n\n    selector = selector.substr(start);\n  }\n\n  function isEscaped(pos) {\n    var slashCount = 0;\n\n    while (selector.charAt(--pos) === \"\\\\\") slashCount++;\n\n    return (slashCount & 1) === 1;\n  }\n\n  stripWhitespace(0);\n\n  while (selector !== \"\") {\n    var firstChar = selector.charAt(0);\n\n    if (isWhitespace(firstChar)) {\n      sawWS = true;\n      stripWhitespace(1);\n    } else if (firstChar in Traversals) {\n      tokens.push({\n        type: Traversals[firstChar]\n      });\n      sawWS = false;\n      stripWhitespace(1);\n    } else if (firstChar === \",\") {\n      if (tokens.length === 0) {\n        throw new Error(\"Empty sub-selector\");\n      }\n\n      subselects.push(tokens);\n      tokens = [];\n      sawWS = false;\n      stripWhitespace(1);\n    } else {\n      if (sawWS) {\n        if (tokens.length > 0) {\n          tokens.push({\n            type: \"descendant\"\n          });\n        }\n\n        sawWS = false;\n      }\n\n      if (firstChar === \"*\") {\n        selector = selector.substr(1);\n        tokens.push({\n          type: \"universal\"\n        });\n      } else if (firstChar in attribSelectors) {\n        var _c = attribSelectors[firstChar],\n            name_1 = _c[0],\n            action = _c[1];\n        selector = selector.substr(1);\n        tokens.push({\n          type: \"attribute\",\n          name: name_1,\n          action: action,\n          value: getName(),\n          ignoreCase: false\n        });\n      } else if (firstChar === \"[\") {\n        selector = selector.substr(1);\n        var attributeMatch = selector.match(reAttr);\n\n        if (!attributeMatch) {\n          throw new Error(\"Malformed attribute selector: \" + selector);\n        }\n\n        var completeSelector = attributeMatch[0],\n            baseName = attributeMatch[1],\n            actionType = attributeMatch[2],\n            _d = attributeMatch[4],\n            quotedValue = _d === void 0 ? \"\" : _d,\n            _e = attributeMatch[5],\n            value = _e === void 0 ? quotedValue : _e,\n            ignoreCase = attributeMatch[6];\n        selector = selector.substr(completeSelector.length);\n        var name_2 = unescapeCSS(baseName);\n\n        if ((_a = options.lowerCaseAttributeNames) !== null && _a !== void 0 ? _a : !options.xmlMode) {\n          name_2 = name_2.toLowerCase();\n        }\n\n        tokens.push({\n          type: \"attribute\",\n          name: name_2,\n          action: actionTypes[actionType],\n          value: unescapeCSS(value),\n          ignoreCase: !!ignoreCase\n        });\n      } else if (firstChar === \":\") {\n        if (selector.charAt(1) === \":\") {\n          selector = selector.substr(2);\n          tokens.push({\n            type: \"pseudo-element\",\n            name: getName().toLowerCase()\n          });\n          continue;\n        }\n\n        selector = selector.substr(1);\n        var name_3 = getName().toLowerCase();\n        var data = null;\n\n        if (selector.startsWith(\"(\")) {\n          if (unpackPseudos.has(name_3)) {\n            var quot = selector.charAt(1);\n            var quoted = quotes.has(quot);\n            selector = selector.substr(quoted ? 2 : 1);\n            data = [];\n            selector = parseSelector(data, selector, options);\n\n            if (quoted) {\n              if (!selector.startsWith(quot)) {\n                throw new Error(\"Unmatched quotes in :\" + name_3);\n              } else {\n                selector = selector.substr(1);\n              }\n            }\n\n            if (!selector.startsWith(\")\")) {\n              throw new Error(\"Missing closing parenthesis in :\" + name_3 + \" (\" + selector + \")\");\n            }\n\n            selector = selector.substr(1);\n          } else {\n            var pos = 1;\n            var counter = 1;\n\n            for (; counter > 0 && pos < selector.length; pos++) {\n              if (selector.charAt(pos) === \"(\" && !isEscaped(pos)) {\n                counter++;\n              } else if (selector.charAt(pos) === \")\" && !isEscaped(pos)) {\n                counter--;\n              }\n            }\n\n            if (counter) {\n              throw new Error(\"Parenthesis not matched\");\n            }\n\n            data = selector.substr(1, pos - 2);\n            selector = selector.substr(pos);\n\n            if (stripQuotesFromPseudos.has(name_3)) {\n              var quot = data.charAt(0);\n\n              if (quot === data.slice(-1) && quotes.has(quot)) {\n                data = data.slice(1, -1);\n              }\n\n              data = unescapeCSS(data);\n            }\n          }\n        }\n\n        tokens.push({\n          type: \"pseudo\",\n          name: name_3,\n          data: data\n        });\n      } else if (reName.test(selector)) {\n        var name_4 = getName();\n\n        if ((_b = options.lowerCaseTags) !== null && _b !== void 0 ? _b : !options.xmlMode) {\n          name_4 = name_4.toLowerCase();\n        }\n\n        tokens.push({\n          type: \"tag\",\n          name: name_4\n        });\n      } else {\n        if (tokens.length && tokens[tokens.length - 1].type === \"descendant\") {\n          tokens.pop();\n        }\n\n        addToken(subselects, tokens);\n        return selector;\n      }\n    }\n  }\n\n  addToken(subselects, tokens);\n  return selector;\n}\n\nfunction addToken(subselects, tokens) {\n  if (subselects.length > 0 && tokens.length === 0) {\n    throw new Error(\"Empty sub-selector\");\n  }\n\n  subselects.push(tokens);\n}","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/node_modules/css-what/lib/parse.js"],"names":["Object","defineProperty","exports","value","default","parse","reName","reEscape","reAttr","actionTypes","undefined","$","Traversals","attribSelectors","unpackPseudos","Set","stripQuotesFromPseudos","quotes","funescape","_","escaped","escapedWhitespace","high","parseInt","String","fromCharCode","unescapeCSS","str","replace","isWhitespace","c","selector","options","subselects","parseSelector","Error","_a","_b","tokens","sawWS","getName","match","sub","substr","length","stripWhitespace","start","charAt","isEscaped","pos","slashCount","firstChar","push","type","_c","name_1","action","name","ignoreCase","attributeMatch","completeSelector","baseName","actionType","_d","quotedValue","_e","name_2","lowerCaseAttributeNames","xmlMode","toLowerCase","name_3","data","startsWith","has","quot","quoted","counter","slice","test","name_4","lowerCaseTags","pop","addToken"],"mappings":"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","sourcesContent":["\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.default = parse;\nvar reName = /^[^\\\\]?(?:\\\\(?:[\\da-f]{1,6}\\s?|.)|[\\w\\-\\u00b0-\\uFFFF])+/;\nvar reEscape = /\\\\([\\da-f]{1,6}\\s?|(\\s)|.)/gi;\n// Modified version of https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L87\nvar reAttr = /^\\s*((?:\\\\.|[\\w\\u00b0-\\uFFFF-])+)\\s*(?:(\\S?)=\\s*(?:(['\"])((?:[^\\\\]|\\\\[^])*?)\\3|(#?(?:\\\\.|[\\w\\u00b0-\\uFFFF-])*)|)|)\\s*(i)?\\]/;\nvar actionTypes = {\n    undefined: \"exists\",\n    \"\": \"equals\",\n    \"~\": \"element\",\n    \"^\": \"start\",\n    $: \"end\",\n    \"*\": \"any\",\n    \"!\": \"not\",\n    \"|\": \"hyphen\",\n};\nvar Traversals = {\n    \">\": \"child\",\n    \"<\": \"parent\",\n    \"~\": \"sibling\",\n    \"+\": \"adjacent\",\n};\nvar attribSelectors = {\n    \"#\": [\"id\", \"equals\"],\n    \".\": [\"class\", \"element\"],\n};\n// Pseudos, whose data property is parsed as well.\nvar unpackPseudos = new Set([\n    \"has\",\n    \"not\",\n    \"matches\",\n    \"is\",\n    \"host\",\n    \"host-context\",\n]);\nvar stripQuotesFromPseudos = new Set([\"contains\", \"icontains\"]);\nvar quotes = new Set(['\"', \"'\"]);\n// Unescape function taken from https://github.com/jquery/sizzle/blob/master/src/sizzle.js#L152\nfunction funescape(_, escaped, escapedWhitespace) {\n    var high = parseInt(escaped, 16) - 0x10000;\n    // NaN means non-codepoint\n    return high !== high || escapedWhitespace\n        ? escaped\n        : high < 0\n            ? // BMP codepoint\n                String.fromCharCode(high + 0x10000)\n            : // Supplemental Plane codepoint (surrogate pair)\n                String.fromCharCode((high >> 10) | 0xd800, (high & 0x3ff) | 0xdc00);\n}\nfunction unescapeCSS(str) {\n    return str.replace(reEscape, funescape);\n}\nfunction isWhitespace(c) {\n    return c === \" \" || c === \"\\n\" || c === \"\\t\" || c === \"\\f\" || c === \"\\r\";\n}\nfunction parse(selector, options) {\n    var subselects = [];\n    selector = parseSelector(subselects, \"\" + selector, options);\n    if (selector !== \"\") {\n        throw new Error(\"Unmatched selector: \" + selector);\n    }\n    return subselects;\n}\nfunction parseSelector(subselects, selector, options) {\n    var _a, _b;\n    if (options === void 0) { options = {}; }\n    var tokens = [];\n    var sawWS = false;\n    function getName() {\n        var match = selector.match(reName);\n        if (!match) {\n            throw new Error(\"Expected name, found \" + selector);\n        }\n        var sub = match[0];\n        selector = selector.substr(sub.length);\n        return unescapeCSS(sub);\n    }\n    function stripWhitespace(start) {\n        while (isWhitespace(selector.charAt(start)))\n            start++;\n        selector = selector.substr(start);\n    }\n    function isEscaped(pos) {\n        var slashCount = 0;\n        while (selector.charAt(--pos) === \"\\\\\")\n            slashCount++;\n        return (slashCount & 1) === 1;\n    }\n    stripWhitespace(0);\n    while (selector !== \"\") {\n        var firstChar = selector.charAt(0);\n        if (isWhitespace(firstChar)) {\n            sawWS = true;\n            stripWhitespace(1);\n        }\n        else if (firstChar in Traversals) {\n            tokens.push({ type: Traversals[firstChar] });\n            sawWS = false;\n            stripWhitespace(1);\n        }\n        else if (firstChar === \",\") {\n            if (tokens.length === 0) {\n                throw new Error(\"Empty sub-selector\");\n            }\n            subselects.push(tokens);\n            tokens = [];\n            sawWS = false;\n            stripWhitespace(1);\n        }\n        else {\n            if (sawWS) {\n                if (tokens.length > 0) {\n                    tokens.push({ type: \"descendant\" });\n                }\n                sawWS = false;\n            }\n            if (firstChar === \"*\") {\n                selector = selector.substr(1);\n                tokens.push({ type: \"universal\" });\n            }\n            else if (firstChar in attribSelectors) {\n                var _c = attribSelectors[firstChar], name_1 = _c[0], action = _c[1];\n                selector = selector.substr(1);\n                tokens.push({\n                    type: \"attribute\",\n                    name: name_1,\n                    action: action,\n                    value: getName(),\n                    ignoreCase: false,\n                });\n            }\n            else if (firstChar === \"[\") {\n                selector = selector.substr(1);\n                var attributeMatch = selector.match(reAttr);\n                if (!attributeMatch) {\n                    throw new Error(\"Malformed attribute selector: \" + selector);\n                }\n                var completeSelector = attributeMatch[0], baseName = attributeMatch[1], actionType = attributeMatch[2], _d = attributeMatch[4], quotedValue = _d === void 0 ? \"\" : _d, _e = attributeMatch[5], value = _e === void 0 ? quotedValue : _e, ignoreCase = attributeMatch[6];\n                selector = selector.substr(completeSelector.length);\n                var name_2 = unescapeCSS(baseName);\n                if ((_a = options.lowerCaseAttributeNames) !== null && _a !== void 0 ? _a : !options.xmlMode) {\n                    name_2 = name_2.toLowerCase();\n                }\n                tokens.push({\n                    type: \"attribute\",\n                    name: name_2,\n                    action: actionTypes[actionType],\n                    value: unescapeCSS(value),\n                    ignoreCase: !!ignoreCase,\n                });\n            }\n            else if (firstChar === \":\") {\n                if (selector.charAt(1) === \":\") {\n                    selector = selector.substr(2);\n                    tokens.push({\n                        type: \"pseudo-element\",\n                        name: getName().toLowerCase(),\n                    });\n                    continue;\n                }\n                selector = selector.substr(1);\n                var name_3 = getName().toLowerCase();\n                var data = null;\n                if (selector.startsWith(\"(\")) {\n                    if (unpackPseudos.has(name_3)) {\n                        var quot = selector.charAt(1);\n                        var quoted = quotes.has(quot);\n                        selector = selector.substr(quoted ? 2 : 1);\n                        data = [];\n                        selector = parseSelector(data, selector, options);\n                        if (quoted) {\n                            if (!selector.startsWith(quot)) {\n                                throw new Error(\"Unmatched quotes in :\" + name_3);\n                            }\n                            else {\n                                selector = selector.substr(1);\n                            }\n                        }\n                        if (!selector.startsWith(\")\")) {\n                            throw new Error(\"Missing closing parenthesis in :\" + name_3 + \" (\" + selector + \")\");\n                        }\n                        selector = selector.substr(1);\n                    }\n                    else {\n                        var pos = 1;\n                        var counter = 1;\n                        for (; counter > 0 && pos < selector.length; pos++) {\n                            if (selector.charAt(pos) === \"(\" &&\n                                !isEscaped(pos)) {\n                                counter++;\n                            }\n                            else if (selector.charAt(pos) === \")\" &&\n                                !isEscaped(pos)) {\n                                counter--;\n                            }\n                        }\n                        if (counter) {\n                            throw new Error(\"Parenthesis not matched\");\n                        }\n                        data = selector.substr(1, pos - 2);\n                        selector = selector.substr(pos);\n                        if (stripQuotesFromPseudos.has(name_3)) {\n                            var quot = data.charAt(0);\n                            if (quot === data.slice(-1) && quotes.has(quot)) {\n                                data = data.slice(1, -1);\n                            }\n                            data = unescapeCSS(data);\n                        }\n                    }\n                }\n                tokens.push({ type: \"pseudo\", name: name_3, data: data });\n            }\n            else if (reName.test(selector)) {\n                var name_4 = getName();\n                if ((_b = options.lowerCaseTags) !== null && _b !== void 0 ? _b : !options.xmlMode) {\n                    name_4 = name_4.toLowerCase();\n                }\n                tokens.push({ type: \"tag\", name: name_4 });\n            }\n            else {\n                if (tokens.length &&\n                    tokens[tokens.length - 1].type === \"descendant\") {\n                    tokens.pop();\n                }\n                addToken(subselects, tokens);\n                return selector;\n            }\n        }\n    }\n    addToken(subselects, tokens);\n    return selector;\n}\nfunction addToken(subselects, tokens) {\n    if (subselects.length > 0 && tokens.length === 0) {\n        throw new Error(\"Empty sub-selector\");\n    }\n    subselects.push(tokens);\n}\n"]},"metadata":{},"sourceType":"script"}