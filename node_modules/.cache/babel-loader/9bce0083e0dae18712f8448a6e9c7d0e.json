{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function displayForecast(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecast-day\",\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            code: \"800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecast-temperatures\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"WeatherForecast-max\",\n              children: forecastData[0].temp.max\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 25,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"WeatherForecast-min\",\n              children: \"11\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 21,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"20/pdcvQnLtcZUd5Lz9vhTDggVQ=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherIcon","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","displayForecast","response","data","daily","forecastData","temp","max","apiKey","units","lat","coordinates","lon","apiEndpoint","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,uBAAP;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBN,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACO,QAAD,EAAWC,WAAX,IAA0BR,QAAQ,CAAC,IAAD,CAAtC;;AAEA,WAASS,eAAT,CAAyBC,QAAzB,EAAmC;AACjCF,IAAAA,WAAW,CAACE,QAAQ,CAACC,IAAT,CAAcC,KAAf,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,8BAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA,wBACGQ,YAAY,CAAC,CAAD,CAAZ,CAAgBC,IAAhB,CAAqBC;AADxB;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAgBD,GAjBD,MAiBO;AACL,QAAIC,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAGd,KAAK,CAACe,WAAN,CAAkBD,GAA5B;AACA,QAAIE,GAAG,GAAGhB,KAAK,CAACe,WAAN,CAAkBC,GAA5B;AACA,QAAIC,WAAW,GAAG,kDAAlB;AACA,QAAIC,MAAM,GAAI,GAAED,WAAY,OAAMH,GAAI,QAAOE,GAAI,UAASJ,MAAO,UAASC,KAAM,EAAhF;AACAhB,IAAAA,KAAK,CAACsB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBf,eAAvB;AACA,WAAO,IAAP;AACD;AACF;;GApCuBN,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport WeatherIcon from \"./WeatherIcon\";\n\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  function displayForecast(response) {\n    setForecast(response.data.daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"WeatherForecast-day\">Wed</div>\n            <WeatherIcon code=\"800\" />\n            <div className=\"WeatherForecast-temperatures\">\n              <span className=\"WeatherForecast-max\">\n                {forecastData[0].temp.max}\n              </span>\n              <span className=\"WeatherForecast-min\">11Â°</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}