{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\nimport \"./Weather.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({\n    loaded: false\n  });\n  const searchButton = useRef(null);\n  const [location, setLocation] = useState(\"\");\n\n  function getWeatherData(response) {\n    setWeatherData({\n      loaded: true,\n      date: new Date(response.data.dt * 1000),\n      city: response.data.name,\n      coordinates: response.data.coord,\n      temperature: Math.round(response.data.main.temp),\n      icon: response.data.weather[0].id,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed)\n    });\n    setCity(\"\");\n    if (searchButton.current) searchButton.current.focus();\n  }\n\n  function search() {\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/weather?\";\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${unit}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function searchLocation() {\n    let apiKey = \"daa346289604c733eba9cb1d5b7d910d\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function handleCurrentLocation(event) {\n    event.preventDefault();\n    searchLocation();\n  }\n\n  if (weatherData.loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Weather\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"row search-row\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col search\",\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"search\",\n                placeholder: \"  \\uD83C\\uDF0D  Search City\",\n                className: \"form-control\",\n                onChange: handleCitySearch,\n                value: city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \" \\uD83D\\uDC40 \",\n                className: \"button search-button\",\n                ref: searchButton\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"submit\",\n                value: \" \\uD83D\\uDCCD \",\n                className: \"button location-button\",\n                onClick: handleCurrentLocation\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"col date-time\",\n              children: /*#__PURE__*/_jsxDEV(FormattedDate, {\n                date: weatherData.date\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherForecast, {\n          coordinates: weatherData.coordinates\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"y2pDvDNWK2v1nVF32SL9RUPgrRs=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/Weather.js"],"names":["React","useState","useRef","axios","FormattedDate","WeatherInfo","WeatherForecast","Weather","props","city","setCity","defaultCity","weatherData","setWeatherData","loaded","searchButton","location","setLocation","getWeatherData","response","date","Date","data","dt","name","coordinates","coord","temperature","Math","round","main","temp","icon","weather","id","description","humidity","wind","speed","current","focus","search","apiEndpoint","lat","position","coords","latitude","lon","longitude","apiUrl","apiKey","unit","get","then","searchLocation","units","handleSubmit","event","preventDefault","handleCitySearch","target","value","handleCurrentLocation"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport axios from \"axios\";\n\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport WeatherForecast from \"./WeatherForecast\";\n\nimport \"./Weather.css\";\n\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.defaultCity);\n\n  const [weatherData, setWeatherData] = useState({ loaded: false });\n\n  const searchButton = useRef(null);\n\n  const [location, setLocation] = useState(\"\");\n\n  function getWeatherData(response) {\n    setWeatherData({\n      loaded: true,\n      date: new Date(response.data.dt * 1000),\n      city: response.data.name,\n      coordinates: response.data.coord,\n      temperature: Math.round(response.data.main.temp),\n      icon: response.data.weather[0].id,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n    });\n\n    setCity(\"\");\n\n    if (searchButton.current) searchButton.current.focus();\n  }\n\n  function search() {\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/weather?\";\n    let lat = position.coords.latitude;\n    let lon = position.coords.longitude;\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${unit}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function searchLocation() {\n    let apiKey = \"daa346289604c733eba9cb1d5b7d910d\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  function handleCurrentLocation(event) {\n    event.preventDefault();\n    searchLocation();\n  }\n\n  if (weatherData.loaded) {\n    return (\n      <div className=\"Weather\">\n        <header>\n          <form onSubmit={handleSubmit}>\n            <div className=\"row search-row\">\n              <div className=\"col search\">\n                <input\n                  type=\"search\"\n                  placeholder=\"  🌍  Search City\"\n                  className=\"form-control\"\n                  onChange={handleCitySearch}\n                  value={city}\n                />\n                <input\n                  type=\"submit\"\n                  value=\" 👀 \"\n                  className=\"button search-button\"\n                  ref={searchButton}\n                />\n                <input\n                  type=\"submit\"\n                  value=\" 📍 \"\n                  className=\"button location-button\"\n                  onClick={handleCurrentLocation}\n                />\n              </div>\n              <div className=\"col date-time\">\n                <FormattedDate date={weatherData.date} />\n              </div>\n            </div>\n          </form>\n          <WeatherInfo data={weatherData} />\n          <WeatherForecast coordinates={weatherData.coordinates} />\n        </header>\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}