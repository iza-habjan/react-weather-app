{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport WeatherIcon from \"./WeatherIcon\";\nimport \"./WeatherForecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [forecastDisplayed, setForecastDisplayed] = useState(false);\n\n  function displayForecast(response) {\n    console.log(response.data);\n  }\n\n  if (forecastDisplayed) {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"col\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecast-day\",\n            children: \"Wed\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(WeatherIcon, {\n            code: \"800\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"WeatherForecast-temperatures\",\n            children: [/*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"WeatherForecast-max\",\n              children: \"24\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: \"WeatherForecast-min\",\n              children: \"11\\xB0\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this);\n  }\n}\n\n_s(WeatherForecast, \"2kgBoE6kkFhOIl/9a1ikDm+Kjlg=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","axios","WeatherIcon","WeatherForecast","props","forecastDisplayed","setForecastDisplayed","displayForecast","response","console","log","data","apiKey","units","lat","coordinates","lon","apiEndpoint","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,uBAAP;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,iBAAD,EAAoBC,oBAApB,IAA4CN,QAAQ,CAAC,KAAD,CAAxD;;AAEA,WAASO,eAAT,CAAyBC,QAAzB,EAAmC;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYF,QAAQ,CAACG,IAArB;AACD;;AAED,MAAIN,iBAAJ,EAAuB;AACrB,QAAIO,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAGV,KAAK,CAACW,WAAN,CAAkBD,GAA5B;AACA,QAAIE,GAAG,GAAGZ,KAAK,CAACW,WAAN,CAAkBC,GAA5B;AACA,QAAIC,WAAW,GAAG,kDAAlB;AACA,QAAIC,MAAM,GAAI,GAAED,WAAY,OAAMH,GAAI,QAAOE,GAAI,UAASJ,MAAO,UAASC,KAAM,EAAhF;AACAZ,IAAAA,KAAK,CAACkB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBb,eAAvB;AACA,WAAO,IAAP;AACD,GATD,MASO;AACL,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,+BACE;AAAK,UAAA,SAAS,EAAC,KAAf;AAAA,kCACE;AAAK,YAAA,SAAS,EAAC,qBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,WAAD;AAAa,YAAA,IAAI,EAAC;AAAlB;AAAA;AAAA;AAAA;AAAA,kBAFF,eAGE;AAAK,YAAA,SAAS,EAAC,8BAAf;AAAA,oCACE;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE;AAAM,cAAA,SAAS,EAAC,qBAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAFF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAcD;AACF;;GAhCuBJ,e;;KAAAA,e","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport WeatherIcon from \"./WeatherIcon\";\n\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n  let [forecastDisplayed, setForecastDisplayed] = useState(false);\n\n  function displayForecast(response) {\n    console.log(response.data);\n  }\n\n  if (forecastDisplayed) {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  } else {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          <div className=\"col\">\n            <div className=\"WeatherForecast-day\">Wed</div>\n            <WeatherIcon code=\"800\" />\n            <div className=\"WeatherForecast-temperatures\">\n              <span className=\"WeatherForecast-max\">24°</span>\n              <span className=\"WeatherForecast-min\">11°</span>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n"]},"metadata":{},"sourceType":"module"}