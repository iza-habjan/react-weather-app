{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/Weather.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\nimport \"./Search.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Weather(props) {\n  _s();\n\n  const [city, setCity] = useState(props.defaultCity);\n  const [weatherData, setWeatherData] = useState({\n    loaded: false\n  });\n\n  function getWeatherData(response) {\n    setWeatherData({\n      loaded: true,\n      date: new Date(response.data.dt * 1000),\n      city: response.data.name,\n      temperature: Math.round(response.data.main.temp),\n      icon: response.data.weather[0].id,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed)\n    });\n  }\n\n  function search() {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: handleSubmit,\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"search\",\n            placeholder: \"  \\uD83C\\uDF0D  Search City\",\n            className: \"form-control\",\n            onChange: handleCitySearch\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\uD83D\\uDC40\",\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"submit\",\n            value: \"\\uD83D\\uDCCD\",\n            className: \"button\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"date-time\",\n          children: /*#__PURE__*/_jsxDEV(FormattedDate, {\n            date: weatherData.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(WeatherInfo, {\n          data: weatherData\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this);\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n\n_s(Weather, \"whN3jka5Im7GzzJNbxkJqg9wmMQ=\");\n\n_c = Weather;\n\nvar _c;\n\n$RefreshReg$(_c, \"Weather\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/Weather.js"],"names":["React","useState","axios","FormattedDate","WeatherInfo","Weather","props","city","setCity","defaultCity","weatherData","setWeatherData","loaded","getWeatherData","response","date","Date","data","dt","name","temperature","Math","round","main","temp","icon","weather","id","description","humidity","wind","speed","search","apiKey","units","apiUrl","get","then","handleSubmit","event","preventDefault","handleCitySearch","target","value"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nimport FormattedDate from \"./FormattedDate\";\nimport WeatherInfo from \"./WeatherInfo\";\n\nimport \"./Search.css\";\n\nexport default function Weather(props) {\n  const [city, setCity] = useState(props.defaultCity);\n\n  const [weatherData, setWeatherData] = useState({ loaded: false });\n\n  function getWeatherData(response) {\n    setWeatherData({\n      loaded: true,\n      date: new Date(response.data.dt * 1000),\n      city: response.data.name,\n      temperature: Math.round(response.data.main.temp),\n      icon: response.data.weather[0].id,\n      description: response.data.weather[0].description,\n      humidity: response.data.main.humidity,\n      wind: Math.round(response.data.wind.speed),\n    });\n  }\n\n  function search() {\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    search();\n  }\n\n  function handleCitySearch(event) {\n    setCity(event.target.value);\n  }\n\n  if (weatherData.loaded) {\n    return (\n      <div>\n        <header className=\"App-header\">\n          <form onSubmit={handleSubmit}>\n            <input\n              type=\"search\"\n              placeholder=\"  🌍  Search City\"\n              className=\"form-control\"\n              onChange={handleCitySearch}\n            />\n            <input type=\"submit\" value=\"👀\" className=\"button\" />\n            <input type=\"submit\" value=\"📍\" className=\"button\" />\n          </form>\n          <span className=\"date-time\">\n            <FormattedDate date={weatherData.date} />\n          </span>\n          <WeatherInfo data={weatherData} />\n        </header>\n      </div>\n    );\n  } else {\n    search();\n    return \"Loading...\";\n  }\n}\n"]},"metadata":{},"sourceType":"module"}