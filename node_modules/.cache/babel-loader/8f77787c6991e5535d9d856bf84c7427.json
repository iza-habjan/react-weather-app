{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Search() {\n  _s();\n\n  const [city, setCity] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [wind, setWind] = useState(null);\n  const [icon, setIcon] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n\n  function getWeatherData(response) {\n    setTemperature(Math.round(response.data.main.temp));\n    setDescription(response.data.weather[0].description);\n    setHumidity(response.data.main.humidity);\n    setWind(Math.round(response.data.wind.speed));\n    setLoaded(true);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function showWeather(event) {\n    setCity(event.target.value);\n  }\n\n  let form = /*#__PURE__*/_jsxDEV(\"form\", {\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"search\",\n      placeholder: \"\\uD83C\\uDF0D Search City\",\n      onChange: showWeather\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleSubmit,\n      children: \"\\uD83D\\uDC40\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      children: \"\\uD83D\\uDCCD\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [form, /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: [/*#__PURE__*/_jsxDEV(\"li\", {\n          children: city\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: description\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [temperature, \"\\xB0C\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Humidity: \", humidity, \"%\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n          children: [\"Wind: \", wind, \"km/h\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this);\n  } else {\n    return form;\n  }\n}\n\n_s(Search, \"omxvzQI3nkFeV0M5PFv7tgiF14s=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/Search.js"],"names":["React","useState","axios","Search","city","setCity","description","setDescription","temperature","setTemperature","humidity","setHumidity","wind","setWind","icon","setIcon","loaded","setLoaded","getWeatherData","response","Math","round","data","main","temp","weather","speed","handleSubmit","event","preventDefault","apiKey","units","apiUrl","get","then","showWeather","target","value","form"],"mappings":"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","sourcesContent":["import React, { useState } from \"react\";\nimport axios from \"axios\";\n\nexport default function Search() {\n  const [city, setCity] = useState(null);\n  const [description, setDescription] = useState(null);\n  const [temperature, setTemperature] = useState(null);\n  const [humidity, setHumidity] = useState(null);\n  const [wind, setWind] = useState(null);\n  const [icon, setIcon] = useState(null);\n  const [loaded, setLoaded] = useState(false);\n\n  function getWeatherData(response) {\n    setTemperature(Math.round(response.data.main.temp));\n    setDescription(response.data.weather[0].description);\n    setHumidity(response.data.main.humidity);\n    setWind(Math.round(response.data.wind.speed));\n    setLoaded(true);\n  }\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    let apiKey = \"477355458f09adef7ea7ed5ab3947103\";\n    let units = \"metric\";\n    let apiUrl = `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(getWeatherData);\n  }\n\n  function showWeather(event) {\n    setCity(event.target.value);\n  }\n\n  let form = (\n    <form onSubmit={handleSubmit}>\n      <input\n        type=\"search\"\n        placeholder=\"üåç Search City\"\n        onChange={showWeather}\n      />\n      <button onClick={handleSubmit}>üëÄ</button>\n      <button>üìç</button>\n    </form>\n  );\n\n  if (loaded) {\n    return (\n      <div>\n        {form}\n        <ul>\n          <li>{city}</li>\n          <li>{description}</li>\n          <li>{temperature}¬∞C</li>\n          <li>Humidity: {humidity}%</li>\n          <li>Wind: {wind}km/h</li>\n        </ul>\n      </div>\n    );\n  } else {\n    return form;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}