{"ast":null,"code":"var _jsxFileName = \"/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport WeatherForecastDay from \"./WeatherForecastDay\";\nimport \"./WeatherForecast.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function WeatherForecast(props) {\n  _s();\n\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function displayForecast(response) {\n    const daily = [];\n\n    for (let index = 0; index < 7; index++) daily.push(response.data.daily[index]);\n\n    setForecast(daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"WeatherForecast\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"row\",\n        children: forecast.map(function (dailyForecast, index) {\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"col-6 col-md-4\",\n            children: /*#__PURE__*/_jsxDEV(WeatherForecastDay, {\n              data: dailyForecast\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 17\n            }, this)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 15\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this);\n  } else {\n    let apiKey = \"daa346289604c733eba9cb1d5b7d910d\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  }\n}\n\n_s(WeatherForecast, \"kLNsBjMbwg/21mEy29QJZwMPCGo=\");\n\n_c = WeatherForecast;\n\nvar _c;\n\n$RefreshReg$(_c, \"WeatherForecast\");","map":{"version":3,"sources":["/Users/iza/SheCodes/react-weather-app/src/WeatherForecast.js"],"names":["React","useState","useEffect","axios","WeatherForecastDay","WeatherForecast","props","loaded","setLoaded","forecast","setForecast","coordinates","displayForecast","response","daily","index","push","data","map","dailyForecast","apiKey","units","lat","lon","apiEndpoint","apiUrl","get","then"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,OAAOC,kBAAP,MAA+B,sBAA/B;AAEA,OAAO,uBAAP;;AAEA,eAAe,SAASC,eAAT,CAAyBC,KAAzB,EAAgC;AAAA;;AAC7C,MAAI,CAACC,MAAD,EAASC,SAAT,IAAsBP,QAAQ,CAAC,KAAD,CAAlC;AACA,MAAI,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,IAAD,CAAtC;AAEAC,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,SAAS,CAAC,KAAD,CAAT;AACD,GAFQ,EAEN,CAACF,KAAK,CAACK,WAAP,CAFM,CAAT;;AAIA,WAASC,eAAT,CAAyBC,QAAzB,EAAmC;AACjC,UAAMC,KAAK,GAAG,EAAd;;AAEA,SAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,GAAG,CAA5B,EAA+BA,KAAK,EAApC,EACED,KAAK,CAACE,IAAN,CAAWH,QAAQ,CAACI,IAAT,CAAcH,KAAd,CAAoBC,KAApB,CAAX;;AAEFL,IAAAA,WAAW,CAACI,KAAD,CAAX;AACAN,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAED,MAAID,MAAJ,EAAY;AACV,wBACE;AAAK,MAAA,SAAS,EAAC,iBAAf;AAAA,6BACE;AAAK,QAAA,SAAS,EAAC,KAAf;AAAA,kBACGE,QAAQ,CAACS,GAAT,CAAa,UAAUC,aAAV,EAAyBJ,KAAzB,EAAgC;AAC5C,8BACE;AAAK,YAAA,SAAS,EAAC,gBAAf;AAAA,mCACE,QAAC,kBAAD;AAAoB,cAAA,IAAI,EAAEI;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF,aAAqCJ,KAArC;AAAA;AAAA;AAAA;AAAA,kBADF;AAKD,SANA;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF;AAaD,GAdD,MAcO;AACL,QAAIK,MAAM,GAAG,kCAAb;AACA,QAAIC,KAAK,GAAG,QAAZ;AACA,QAAIC,GAAG,GAAGhB,KAAK,CAACK,WAAN,CAAkBW,GAA5B;AACA,QAAIC,GAAG,GAAGjB,KAAK,CAACK,WAAN,CAAkBY,GAA5B;AACA,QAAIC,WAAW,GAAG,kDAAlB;AACA,QAAIC,MAAM,GAAI,GAAED,WAAY,OAAMF,GAAI,QAAOC,GAAI,UAASH,MAAO,UAASC,KAAM,EAAhF;AACAlB,IAAAA,KAAK,CAACuB,GAAN,CAAUD,MAAV,EAAkBE,IAAlB,CAAuBf,eAAvB;AACA,WAAO,IAAP;AACD;AACF;;GA1CuBP,e;;KAAAA,e","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\n\nimport WeatherForecastDay from \"./WeatherForecastDay\";\n\nimport \"./WeatherForecast.css\";\n\nexport default function WeatherForecast(props) {\n  let [loaded, setLoaded] = useState(false);\n  let [forecast, setForecast] = useState(null);\n\n  useEffect(() => {\n    setLoaded(false);\n  }, [props.coordinates]);\n\n  function displayForecast(response) {\n    const daily = [];\n\n    for (let index = 0; index < 7; index++)\n      daily.push(response.data.daily[index]);\n\n    setForecast(daily);\n    setLoaded(true);\n  }\n\n  if (loaded) {\n    return (\n      <div className=\"WeatherForecast\">\n        <div className=\"row\">\n          {forecast.map(function (dailyForecast, index) {\n            return (\n              <div className=\"col-6 col-md-4\" key={index}>\n                <WeatherForecastDay data={dailyForecast} />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n    );\n  } else {\n    let apiKey = \"daa346289604c733eba9cb1d5b7d910d\";\n    let units = \"metric\";\n    let lat = props.coordinates.lat;\n    let lon = props.coordinates.lon;\n    let apiEndpoint = \"https://api.openweathermap.org/data/2.5/onecall?\";\n    let apiUrl = `${apiEndpoint}lat=${lat}&lon=${lon}&appid=${apiKey}&units=${units}`;\n    axios.get(apiUrl).then(displayForecast);\n    return null;\n  }\n}\n"]},"metadata":{},"sourceType":"module"}